# Autogenerated file. ANY CHANGES WILL BE OVERWRITTEN
from to_python.core.types import FunctionType, \
    FunctionArgument, \
    FunctionArgumentValues, \
    FunctionReturnTypes, \
    FunctionSignature, \
    FunctionDoc, \
    FunctionOOP, \
    FunctionData, \
    CompoundFunctionData
    
DUMP_PARTIAL = [
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='createPickup',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='x',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='y',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='z',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theType',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='amount/weapon/model',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='respawnTime',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='30000',
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ammo',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='50',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function creates a pickup element, which is placed in the GTA world and can be picked up to retrieve a health, armour or a weapon. """,
                arguments={
                    "x": """: A floating point number representing the X coordinate on the map. """,
                    "y": """: A floating point number representing the Y coordinate on the map. """,
                    "z": """: A floating point number representing the Z coordinate on the map. """,
                    "theType": """: This is an integer representing the type of pickup, representing the following types: """,
                    "0": """: Health Pickup """,
                    "1": """: Armour Pickup """,
                    "2": """: Weapon Pickup """,
                    "3": """: Custom Pickup """,
                    "amount": """: This is an integer representing the amount of Health points or Armour points a pickup has.
'''OR''' """,
                    "weapon": """: If the type is a Weapon pickup, then it represents the Weapon|weapon ID of the weapon pickup. When used with the weapon pickup type set, the ammo parameter can be used.
'''OR''' """,
                    "model": """: If the pickup is a custom model, this is the model id to use. Many non-pickup models can be used, though some may cause crashes. The following is a list of models designed to be used as pickups. """,
                    "1212": """Money (wad of cash) """,
                    "1240": """Health (heart) """,
                    "1242": """Armour """,
                    "1239": """Info icon """,
                    "1272": """House (blue) """,
                    "1273": """House (green) """,
                    "1241": """Adrenaline """,
                    "1247": """Bribe """,
                    "1248": """GTA III sign """,
                    "1252": """Bomb from GTA III """,
                    "1253": """Photo op """,
                    "1254": """Skull """,
                    "1274": """Money icon """,
                    "1275": """Blue t-shirt """,
                    "1277": """Save disk """,
                    "1313": """2 Skulls """,
                    "1314": """2 Players icon """,
                    "1276": """Tiki statue """,
                    "1310": """Parachute (with leg straps) """,
                    "1318": """Down arrow """,
                    "1279": """Drug bundle
'''OR'''
Other ID Object """,
                    "respawnTime": """: How long before the pickup respawns in milliseconds (This parameter is ignored on the client!) """,
                    "ammo": """: An integer representing the amount of ammo a pickup contains.  This is only valid when the pickup type is a weapon pickup. """
                },
                result="""returns pickup element if the pickup was created succesfully, otherwise returns false. """,
            ),
            oop=FunctionOOP(
                description=None,
                class_name='Pickup',
                method_name=None,
                field=None,
                is_static=True,
            ),
            name='createPickup',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='createPickup',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='x',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='y',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='z',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theType',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='amount/weapon/model',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='respawnTime',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='30000',
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ammo',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='50',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function creates a pickup element, which is placed in the GTA world and can be picked up to retrieve a health, armour or a weapon. """,
                arguments={
                    "x": """: A floating point number representing the X coordinate on the map. """,
                    "y": """: A floating point number representing the Y coordinate on the map. """,
                    "z": """: A floating point number representing the Z coordinate on the map. """,
                    "theType": """: This is an integer representing the type of pickup, representing the following types: """,
                    "0": """: Health Pickup """,
                    "1": """: Armour Pickup """,
                    "2": """: Weapon Pickup """,
                    "3": """: Custom Pickup """,
                    "amount": """: This is an integer representing the amount of Health points or Armour points a pickup has.
'''OR''' """,
                    "weapon": """: If the type is a Weapon pickup, then it represents the Weapon|weapon ID of the weapon pickup. When used with the weapon pickup type set, the ammo parameter can be used.
'''OR''' """,
                    "model": """: If the pickup is a custom model, this is the model id to use. Many non-pickup models can be used, though some may cause crashes. The following is a list of models designed to be used as pickups. """,
                    "1212": """Money (wad of cash) """,
                    "1240": """Health (heart) """,
                    "1242": """Armour """,
                    "1239": """Info icon """,
                    "1272": """House (blue) """,
                    "1273": """House (green) """,
                    "1241": """Adrenaline """,
                    "1247": """Bribe """,
                    "1248": """GTA III sign """,
                    "1252": """Bomb from GTA III """,
                    "1253": """Photo op """,
                    "1254": """Skull """,
                    "1274": """Money icon """,
                    "1275": """Blue t-shirt """,
                    "1277": """Save disk """,
                    "1313": """2 Skulls """,
                    "1314": """2 Players icon """,
                    "1276": """Tiki statue """,
                    "1310": """Parachute (with leg straps) """,
                    "1318": """Down arrow """,
                    "1279": """Drug bundle
'''OR'''
Other ID Object """,
                    "respawnTime": """: How long before the pickup respawns in milliseconds (This parameter is ignored on the client!) """,
                    "ammo": """: An integer representing the amount of ammo a pickup contains.  This is only valid when the pickup type is a weapon pickup. """
                },
                result="""returns pickup element if the pickup was created succesfully, otherwise returns false. """,
            ),
            oop=FunctionOOP(
                description=None,
                class_name='Pickup',
                method_name=None,
                field=None,
                is_static=True,
            ),
            name='createPickup',
        )
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupAmmo',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the amount of ammo in a weapon pickup. """,
                arguments={
                    "thePickup": """The pickup in which you wish to retrieve the ammo of """
                },
                result="""returns an integer of the amount of ammo in the pickup, false if the pickup element is invalid, 0 if its no weapon pickup. """,
            ),
            oop=None,
            name='getPickupAmmo',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupAmmo',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the amount of ammo in a weapon pickup. """,
                arguments={
                    "thePickup": """The pickup in which you wish to retrieve the ammo of """
                },
                result="""returns an integer of the amount of ammo in the pickup, false if the pickup element is invalid, 0 if its no weapon pickup. """,
            ),
            oop=None,
            name='getPickupAmmo',
        )
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupAmount',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the amount of health or armor given from a pickup. """,
                arguments={
                    "thePickup": """The pickup you wish to retrieve the amount from. """
                },
                result="""returns an integer of the amount the pickup is set to, false if its invalid, 0 if its no health or amor pickup. """,
            ),
            oop=None,
            name='getPickupAmount',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupAmount',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the amount of health or armor given from a pickup. """,
                arguments={
                    "thePickup": """The pickup you wish to retrieve the amount from. """
                },
                result="""returns an integer of the amount the pickup is set to, false if its invalid, 0 if its no health or amor pickup. """,
            ),
            oop=None,
            name='getPickupAmount',
        )
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupRespawnInterval',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""Returns the time it takes before a pickup respawns after a player picked it up. The time is specified in milliseconds. """,
                arguments={
                    "thePickup": """the pickup you want the respawn time of """
                },
                result="""returns the respawn time of the pickup if successful, false in case of failure. """,
            ),
            oop=None,
            name='getPickupRespawnInterval',
        )
        ],
        client=[
            
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupType',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the type of a pickup, either a health, armour or weapon pickup. """,
                arguments={
                    "thePickup": """The pickup you wish to retrieve the type of. """
                },
                result="""returns false if the pickup is invalid, or an integer of the type of the pickup, which include:
*0: health pickup
*1: armour pickup
*2: weapon pickup
*3: custom pickup """,
            ),
            oop=None,
            name='getPickupType',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupType',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the type of a pickup, either a health, armour or weapon pickup. """,
                arguments={
                    "thePickup": """The pickup you wish to retrieve the type of. """
                },
                result="""returns false if the pickup is invalid, or an integer of the type of the pickup, which include:
*0: health pickup
*1: armour pickup
*2: weapon pickup
*3: custom pickup """,
            ),
            oop=None,
            name='getPickupType',
        )
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupWeapon',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the weapon ID of a weapon pickup. """,
                arguments={
                    "thePickup": """The pickup of which you wish to retrieve the weapon """
                },
                result="""returns the weapons|weapon id of the pickup, or false if the pickup is invalid. """,
            ),
            oop=None,
            name='getPickupWeapon',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='getPickupWeapon',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function retrieves the weapon ID of a weapon pickup. """,
                arguments={
                    "thePickup": """The pickup of which you wish to retrieve the weapon """
                },
                result="""returns the weapons|weapon id of the pickup, or false if the pickup is invalid. """,
            ),
            oop=None,
            name='getPickupWeapon',
        )
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='isPickupSpawned',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function checks if a pickup is currently spawned (is visible and can be picked up) or not (a player picked it up recently). """,
                arguments={
                    "thePickup": """the pickup you want to check. """
                },
                result="""returns true if the pickup is spawned, false if its not spawned or an invalid pickup was specified. """,
            ),
            oop=None,
            name='isPickupSpawned',
        )
        ],
        client=[
            
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='setPickupRespawnInterval',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ms',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""Sets the time it takes for a pickup to respawn after a player picked it up. """,
                arguments={
                    "thePickup": """the pickup to set the respawn time of """,
                    "ms": """the new respawn time in ms """
                },
                result="""returns true if the new respawn time was set successfully, false otherwise. """,
            ),
            oop=None,
            name='setPickupRespawnInterval',
        )
        ],
        client=[
            
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='setPickupType',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theType',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='amount/weapon/model',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ammo',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function allows changing the type of a pickup to a Weapon, Armour or Health pickup, and allows you to set the health points or the weapon and ammo that the pickup will give. """,
                arguments={
                    "thePickup": """The pickup which you wish to change the settings of """,
                    "theType": """: An integer representing the type of pickup. You can choose from: """,
                    "0": """: Health Pickup """,
                    "1": """: Armour Pickup """,
                    "2": """: Weapon Pickup """,
                    "3": """: Custom Pickup """,
                    "amount": """: This is an integer representing the amount of Health points or Armour points a pickup has.
'''OR''' """,
                    "weapon": """: If the type is a Weapon pickup, then it represents the Weapon|weapon ID of the weapon pickup the ammo field must be entered if the type is Weapon Pickup.
'''OR''' """,
                    "model": """: If the pickup is a custom model, this is the model id to use. Many non-pickup models can be used, though some may cause crashes. The following is a list of models designed to be used as pickups. """,
                    "370": """Jetpack """,
                    "1240": """Health (heart) """,
                    "1242": """Armour """,
                    "1272": """House (blue) """,
                    "1273": """House (green) """,
                    "1274": """Money (dollar symbol) """,
                    "1277": """Save (floppy disk) """,
                    "ammo": """: An integer representing the amount of ammo a pickup contains. This argument is only valid when the pickup type is a Weapon Pickup, and must be specified in that case. """
                },
                result="""returns true if successful, false otherwise. """,
            ),
            oop=None,
            name='setPickupType',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='setPickupType',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theType',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='amount/weapon/model',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ammo',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function allows changing the type of a pickup to a Weapon, Armour or Health pickup, and allows you to set the health points or the weapon and ammo that the pickup will give. """,
                arguments={
                    "thePickup": """The pickup which you wish to change the settings of """,
                    "theType": """: An integer representing the type of pickup. You can choose from: """,
                    "0": """: Health Pickup """,
                    "1": """: Armour Pickup """,
                    "2": """: Weapon Pickup """,
                    "3": """: Custom Pickup """,
                    "amount": """: This is an integer representing the amount of Health points or Armour points a pickup has.
'''OR''' """,
                    "weapon": """: If the type is a Weapon pickup, then it represents the Weapon|weapon ID of the weapon pickup the ammo field must be entered if the type is Weapon Pickup.
'''OR''' """,
                    "model": """: If the pickup is a custom model, this is the model id to use. Many non-pickup models can be used, though some may cause crashes. The following is a list of models designed to be used as pickups. """,
                    "370": """Jetpack """,
                    "1240": """Health (heart) """,
                    "1242": """Armour """,
                    "1272": """House (blue) """,
                    "1273": """House (green) """,
                    "1274": """Money (dollar symbol) """,
                    "1277": """Save (floppy disk) """,
                    "ammo": """: An integer representing the amount of ammo a pickup contains. This argument is only valid when the pickup type is a Weapon Pickup, and must be specified in that case. """
                },
                result="""returns true if successful, false otherwise. """,
            ),
            oop=None,
            name='setPickupType',
        )
        ],
    ),
    CompoundFunctionData(
        server=[
            FunctionData(
            signature=FunctionSignature(
                name='usePickup',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='thePlayer',
                                argument_type=FunctionType(
                                    names=['player'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function is used to simulate the player using a pickup """,
                arguments={
                    "thePickup": """: The pickup element to be picked up/used. """,
                    "thePlayer": """: The player to use the pickup. """
                },
                result=""" """,
            ),
            oop=None,
            name='usePickup',
        )
        ],
        client=[
            FunctionData(
            signature=FunctionSignature(
                name='usePickup',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePickup',
                                argument_type=FunctionType(
                                    names=['pickup'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='thePlayer',
                                argument_type=FunctionType(
                                    names=['player'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description="""This function is used to simulate the player using a pickup """,
                arguments={
                    "thePickup": """: The pickup element to be picked up/used. """,
                    "thePlayer": """: The player to use the pickup. """
                },
                result=""" """,
            ),
            oop=None,
            name='usePickup',
        )
        ],
    )
]
