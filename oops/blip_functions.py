# Autogenerated file. ANY CHANGES WILL BE OVERWRITTEN
from to_python.core.types import FunctionType, \
    FunctionArgument, \
    FunctionArgumentValues, \
    FunctionReturnTypes, \
    FunctionSignature, \
    FunctionDoc, \
    FunctionOOP, \
    FunctionOOPField, \
    CompoundOOPData, \
    FunctionData, \
    CompoundFunctionData

DUMP_PARTIAL = [
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipColor",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will tell you what color a blip is. This color is only applicable to the default blip icon (Image:Blipid0s.png|12px, Image:Blipid0u.png|12px or Image:Blipid0d.png|12px). All other icons will ignore this.' ,
                arguments={
                    "theBlip": """The blip whose color you wish to get. """
                },
                result='returns four integers in rgba format, with a maximum value of 255 for each. the values are, in order, red, green, blue, and alpha.  alpha decides the transparancy where 255 is opaque and 0 is fully transparent. false is returned if the blip is invalid.' ,
            ),
            url='getBlipColor',
        ),
                field=None,
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipColor",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will tell you what color a blip is. This color is only applicable to the default blip icon (Image:Blipid0s.png|12px, Image:Blipid0u.png|12px or Image:Blipid0d.png|12px). All other icons will ignore this.' ,
                arguments={
                    "theBlip": """The blip whose color you wish to get. """
                },
                result='returns four integers in rgba format, with a maximum value of 255 for each. the values are, in order, red, green, blue, and alpha.  alpha decides the transparancy where 255 is opaque and 0 is fully transparent. false is returned if the blip is invalid.' ,
            ),
            url='getBlipColor',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipIcon",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getIcon',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the icon a blip currently has.' ,
                arguments={
                    "theBlip": """: the blip were getting the icon number of. """
                },
                result='returns an int indicating which icon the blip has. valid values are listed on the radar blips page.' ,
            ),
            url='getBlipIcon',
        ),
                field=FunctionOOPField(
                                name='icon',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipIcon",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getIcon',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the icon a blip currently has.' ,
                arguments={
                    "theBlip": """: the blip were getting the icon number of. """
                },
                result='returns an int indicating which icon the blip has. valid values are listed on the radar blips page.' ,
            ),
            url='getBlipIcon',
        ),
                field=FunctionOOPField(
                                name='icon',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipOrdering",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getOrdering',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function gets the Z ordering value of a blip. The Z ordering determines if a blip appears on top of or below other blips. Blips with a higher Z ordering value appear on top of blips with a lower value. The default value for all blips is 0.' ,
                arguments={
                    "theBlip": """the blip to retrieve the Z ordering value of. """
                },
                result='returns the z ordering value of the blip if successful, false otherwise.' ,
            ),
            url='getBlipOrdering',
        ),
                field=FunctionOOPField(
                                name='ordering',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipOrdering",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getOrdering',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function gets the Z ordering value of a blip. The Z ordering determines if a blip appears on top of or below other blips. Blips with a higher Z ordering value appear on top of blips with a lower value. The default value for all blips is 0.' ,
                arguments={
                    "theBlip": """the blip to retrieve the Z ordering value of. """
                },
                result='returns the z ordering value of the blip if successful, false otherwise.' ,
            ),
            url='getBlipOrdering',
        ),
                field=FunctionOOPField(
                                name='ordering',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipSize",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getSize',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function gets the size of a blip..' ,
                arguments={
                    "theBlip": """The blip you wish to get the size of. """
                },
                result='returns an int indicating the size of the blip. the default value is 2. the maximum value is 25.' ,
            ),
            url='getBlipSize',
        ),
                field=FunctionOOPField(
                                name='size',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipSize",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getSize',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function gets the size of a blip..' ,
                arguments={
                    "theBlip": """The blip you wish to get the size of. """
                },
                result='returns an int indicating the size of the blip. the default value is 2. the maximum value is 25.' ,
            ),
            url='getBlipSize',
        ),
                field=FunctionOOPField(
                                name='size',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipVisibleDistance",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getVisibleDistance',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will tell you what visible distance a blip has.' ,
                arguments={
                    "theBlip": """The blip whose visible distance you wish to get. """
                },
                result='returns one float with the blips visible distance, false if the blip is invalid.' ,
            ),
            url='getBlipVisibleDistance',
        ),
                field=FunctionOOPField(
                                name='visibleDistance',
                                types=[
                                    FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBlipVisibleDistance",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='getVisibleDistance',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will tell you what visible distance a blip has.' ,
                arguments={
                    "theBlip": """The blip whose visible distance you wish to get. """
                },
                result='returns one float with the blips visible distance, false if the blip is invalid.' ,
            ),
            url='getBlipVisibleDistance',
        ),
                field=FunctionOOPField(
                                name='visibleDistance',
                                types=[
                                    FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipColor",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='red',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='green',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='blue',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='alpha',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will let you change the color of a blip. This color is only applicable to the default blip icon (Image:Blipid0s.png|12px, Image:Blipid0u.png|12px or Image:Blipid0d.png|12px). All other icons will ignore this.' ,
                arguments={
                    "theBlip": """The blip whos color you wish to set. """,
                    "red": """The amount of red in the blips color (0 - 255). """,
                    "green": """The amount of green in the blips color (0 - 255). """,
                    "blue": """The amount of blue in the blips color (0 - 255). """,
                    "alpha": """The amount of alpha in the blips color (0 - 255).  Alpha decides transparancy where 255 is opaque and 0 is transparent. """
                },
                result='returns true if the blips color was set successfully. returns false if the blip passed to the function is invalid, or any of the colors are out of the valid range.' ,
            ),
            url='setBlipColor',
        ),
                field=None,
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipColor",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='red',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='green',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='blue',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='alpha',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will let you change the color of a blip. This color is only applicable to the default blip icon (Image:Blipid0s.png|12px, Image:Blipid0u.png|12px or Image:Blipid0d.png|12px). All other icons will ignore this.' ,
                arguments={
                    "theBlip": """The blip whos color you wish to set. """,
                    "red": """The amount of red in the blips color (0 - 255). """,
                    "green": """The amount of green in the blips color (0 - 255). """,
                    "blue": """The amount of blue in the blips color (0 - 255). """,
                    "alpha": """The amount of alpha in the blips color (0 - 255).  Alpha decides transparancy where 255 is opaque and 0 is transparent. """
                },
                result='returns true if the blips color was set successfully. returns false if the blip passed to the function is invalid, or any of the colors are out of the valid range.' ,
            ),
            url='setBlipColor',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipIcon",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setIcon',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='icon',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the icon for an existing blip element.' ,
                arguments={
                    "theBlip": """The blip you wish to set the icon of. """,
                    "icon": """A number indicating the icon you wish to change it do. Valid values are listed on the Radar Blips page. """
                },
                result='returns true if the icon was successfully set, false if the element passed was not a valid blip or the icon value was not a valid icon number.' ,
            ),
            url='setBlipIcon',
        ),
                field=FunctionOOPField(
                                name='icon',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipIcon",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setIcon',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='icon',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the icon for an existing blip element.' ,
                arguments={
                    "theBlip": """The blip you wish to set the icon of. """,
                    "icon": """A number indicating the icon you wish to change it do. Valid values are listed on the Radar Blips page. """
                },
                result='returns true if the icon was successfully set, false if the element passed was not a valid blip or the icon value was not a valid icon number.' ,
            ),
            url='setBlipIcon',
        ),
                field=FunctionOOPField(
                                name='icon',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipOrdering",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setOrdering',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ordering',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the Z ordering of a blip. It allows you to make a blip appear on top of or below other blips.' ,
                arguments={
                    "theBlip": """the blip whose Z ordering to change. """,
                    "ordering": """the new Z ordering value. Blips with higher values will appear on top of blips with lower values. Possible range: -32767 to 32767. Default: 0. """
                },
                result='returns true if the blip ordering was changed successfully, false otherwise.' ,
            ),
            url='setBlipOrdering',
        ),
                field=FunctionOOPField(
                                name='ordering',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipOrdering",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setOrdering',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='ordering',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the Z ordering of a blip. It allows you to make a blip appear on top of or below other blips.' ,
                arguments={
                    "theBlip": """the blip whose Z ordering to change. """,
                    "ordering": """the new Z ordering value. Blips with higher values will appear on top of blips with lower values. Possible range: -32767 to 32767. Default: 0. """
                },
                result='returns true if the blip ordering was changed successfully, false otherwise.' ,
            ),
            url='setBlipOrdering',
        ),
                field=FunctionOOPField(
                                name='ordering',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipSize",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setSize',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='iconSize',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the size of a blips icon.' ,
                arguments={
                    "theBlip": """The blip you wish to get the size of. """,
                    "iconSize": """The size you wish the icon to be. 2 is the default value. 25 is the maximum value. Value gets clamped between 0 and 25. """
                },
                result='returns an true if the blips size was set successfully. returns false if the element passed was not a blip or if the icon size passed was invalid.' ,
            ),
            url='setBlipSize',
        ),
                field=FunctionOOPField(
                                name='size',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipSize",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setSize',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='iconSize',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the size of a blips icon.' ,
                arguments={
                    "theBlip": """The blip you wish to get the size of. """,
                    "iconSize": """The size you wish the icon to be. 2 is the default value. 25 is the maximum value. Value gets clamped between 0 and 25. """
                },
                result='returns an true if the blips size was set successfully. returns false if the element passed was not a blip or if the icon size passed was invalid.' ,
            ),
            url='setBlipSize',
        ),
                field=FunctionOOPField(
                                name='size',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipVisibleDistance",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setVisibleDistance',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theDistance',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will set the visible distance of a blip.' ,
                arguments={
                    "theBlip": """The blip whose visible distance you wish to get. """,
                    "theDistance": """The distance you want the blip to be visible for. Value gets clamped between 0 and 65535. """
                },
                result='returns true if successful, false otherwise.' ,
            ),
            url='setBlipVisibleDistance',
        ),
                field=FunctionOOPField(
                                name='visibleDistance',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBlipVisibleDistance",
                class_name='blip',
                method=FunctionData(
            signature=FunctionSignature(
                name='setVisibleDistance',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBlip',
                                argument_type=FunctionType(
                                    names=['blip'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theDistance',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will set the visible distance of a blip.' ,
                arguments={
                    "theBlip": """The blip whose visible distance you wish to get. """,
                    "theDistance": """The distance you want the blip to be visible for. Value gets clamped between 0 and 65535. """
                },
                result='returns true if successful, false otherwise.' ,
            ),
            url='setBlipVisibleDistance',
        ),
                field=FunctionOOPField(
                                name='visibleDistance',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    )
]
