# Autogenerated file. ANY CHANGES WILL BE OVERWRITTEN
from to_python.core.types import FunctionType, \
    FunctionArgument, \
    FunctionArgumentValues, \
    FunctionReturnTypes, \
    FunctionSignature, \
    FunctionDoc, \
    FunctionOOP, \
    FunctionOOPField, \
    CompoundOOPData, \
    FunctionData, \
    CompoundFunctionData
    
DUMP_PARTIAL = [
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="createProjectile",
                class_name='Projectile',
                method=None,
                field=None,
                is_static=True,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getProjectileCounter",
                class_name='projectile',
                method=FunctionData(
            signature=FunctionSignature(
                name='getCounter',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='projectile',
                                argument_type=FunctionType(
                                    names=['projectile'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='Get the time left before a projectile detonates.' ,
                arguments={
                    "projectile": """: the projectile to get the timer of. """
                },
                result='returns the the time in milliseconds to detonation which depending on the projectile type will do different things:\n* grenades will explode when it hits 0\n* teargas may be a duration timer\n* both types of rockets will explode when it hits 0\n* satchels restarts so i do not think it does anything' ,
            )
        ),
                field=FunctionOOPField(
                                name='counter',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getProjectileCreator",
                class_name='projectile',
                method=FunctionData(
            signature=FunctionSignature(
                name='getCreator',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['element'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theProjectile',
                                argument_type=FunctionType(
                                    names=['projectile'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the creator of the specified projectile.' ,
                arguments={
                    "theProjectile": """The projectiles| projectile element which creator you want to retrieve. """
                },
                result='returns the element which created the projectile if successful, false otherwise.' ,
            )
        ),
                field=FunctionOOPField(
                                name='creator',
                                types=[
                                    FunctionType(
                                    names=['element'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getProjectileForce",
                class_name='projectile',
                method=FunctionData(
            signature=FunctionSignature(
                name='getForce',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theProjectile',
                                argument_type=FunctionType(
                                    names=['projectile'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the force of the specified projectile.' ,
                arguments={
                    "theProjectile": """The projectiles| projectile element which force you want to retrieve. """
                },
                result='returns a float if successful, false otherwise.' ,
            )
        ),
                field=FunctionOOPField(
                                name='force',
                                types=[
                                    FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getProjectileTarget",
                class_name='projectile',
                method=FunctionData(
            signature=FunctionSignature(
                name='getTarget',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['element'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theProjectile',
                                argument_type=FunctionType(
                                    names=['projectile'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the target of the specified projectile.' ,
                arguments={
                    "theProjectile": """The projectiles| projectile element which target you want to retrieve. """
                },
                result='returns the element which is the projectiles target if the projectile is valid and can have a target (like a heat-seeking rocket), false otherwise.' ,
            )
        ),
                field=FunctionOOPField(
                                name='target',
                                types=[
                                    FunctionType(
                                    names=['element'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getProjectileType",
                class_name='projectile',
                method=FunctionData(
            signature=FunctionSignature(
                name='getType',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theProjectile',
                                argument_type=FunctionType(
                                    names=['projectile'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the type of the specified projectile.' ,
                arguments={
                    "theProjectile": """The Element/Projectile|projectile element which type you want to retrieve. """
                },
                result='returns an integer over the type of the projectile or false if invalid arguments were passed.' ,
            )
        ),
                field=FunctionOOPField(
                                name='type',
                                types=[
                                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setProjectileCounter",
                class_name='projectile',
                method=FunctionData(
            signature=FunctionSignature(
                name='setCounter',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='projectile',
                                argument_type=FunctionType(
                                    names=['projectile'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='timeToDetonate',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='Will change the projectile counter timer which depending on the projectile type will do different things:\n* Rockets and Grenades will explode when it hits 0\n* Teargas may be a duration timer\n* Satchels restart (we currently assume it doesnt cause an effect)\n* Molotov will explode with search ground level when it hits 0' ,
                arguments={
                    "projectile": """The projectile to edit the timer of. """,
                    "timeToDetonate": """The time in milliseconds to detonation. """
                },
                result='returns true on success, false otherwise.' ,
            )
        ),
                field=FunctionOOPField(
                                name='counter',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    )
]
