# Autogenerated file. ANY CHANGES WILL BE OVERWRITTEN
from to_python.core.types import FunctionType, \
    FunctionArgument, \
    FunctionArgumentValues, \
    FunctionReturnTypes, \
    FunctionSignature, \
    FunctionDoc, \
    FunctionOOP, \
    FunctionOOPField, \
    CompoundOOPData, \
    FunctionData, \
    CompoundFunctionData

DUMP_PARTIAL = [
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="createBrowser",
                class_name='Element/Browser|Browser',
                method=None,
                field=None,
                is_static=True,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="executeBrowserJavascript",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='executeJavascript',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='jsCode',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function executes a Javascript string to the specified Element/Browser|browser. Works only with local browsers.' ,
                arguments={
                    "webBrowser": """The web browser which will execute the Javascript code """,
                    "jsCode": """The Javascript code string """
                },
                result='returns true if executing javascript is allowed in the current context, false otherwise.' ,
            ),
            url='executeBrowserJavascript',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="focusBrowser",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='focus',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function will attempt to focus the Element/Browser|browser or unfocus all browsers. The browser that is focused will retrieve keyboard input.' ,
                arguments={
                    "webBrowser": """The web browser to be focused - if this is nil, it will unfocus all browsers. """
                },
                result='returns true if the browser was focused or if nil was passed, false if it failed to focus or the browser does not exist.' ,
            ),
            url='focusBrowser',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBrowserProperty",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='getProperty',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='key',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function gets a given property of a specified browser.' ,
                arguments={
                    "theBrowser": """browser element to get the property value of """,
                    "key": """The browser property key. It can be: """,
                    "mobile": """Surfing the web as mobile """
                },
                result='returns the value if the property was successfully found, false otherwise.' ,
            ),
            url='getBrowserProperty',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBrowserSettings",
                class_name='Element/Browser|Browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='getSettings',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns a table containing the browser settings.' ,
                arguments={
                    
                },
                result='a table having the following keys:\n* remoteenabled: true if remote websites are enabled, false otherwise\n* remotejavascript: true if javascript is enabled on remote websites, false otherwise\n* pluginsenabled: true if plugins such as flash, silverlight (but not java) are enabled, false otherwise. this setting is false by default.' ,
            ),
            url='getBrowserSettings',
        ),
                field=None,
                is_static=True,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBrowserSource",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='getSource',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='callback',
                                argument_type=FunctionType(
                                    names=['function'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function can be used to retrieve the source code of a website (asynchronously). The size of the source code is limited to 2 MiB (remaining bytes are cut).' ,
                arguments={
                    "webBrowser": """The browser element you want to get the source of """,
                    "callback": """a callback function with syntax as described below
<syntaxhighlight lang="lua">
function ( string code )
</syntaxhighlight> """
                },
                result='returns true if valid arguments have been passed, false otherwise.' ,
            ),
            url='getBrowserSource',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBrowserTitle",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='getTitle',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the title of the passed Element/Browser|browser.' ,
                arguments={
                    "webBrowser": """The browser """
                },
                result='returns the title as a string. returns false if invalid arguments were passed.' ,
            ),
            url='getBrowserTitle',
        ),
                field=FunctionOOPField(
                                name='title',
                                types=[
                                    FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="getBrowserURL",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='getURL',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function returns the URL of the specified Element/Browser|browser.' ,
                arguments={
                    "webBrowser": """The browser """
                },
                result='returns the web browser url.' ,
            ),
            url='getBrowserURL',
        ),
                field=FunctionOOPField(
                                name='url',
                                types=[
                                    FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="injectBrowserMouseDown",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='injectMouseDown',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='mouseButton',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function injects a mouse click (state: down).' ,
                arguments={
                    "webBrowser": """The web browser """,
                    "mouseButton": """The mouse button (Possible values: left, middle, right) """
                },
                result='returns true if the click was successfully injected, false otherwise.' ,
            ),
            url='injectBrowserMouseDown',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="injectBrowserMouseMove",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='injectMouseMove',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='posX',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='posY',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function injects a mouse movement.' ,
                arguments={
                    "webBrowser": """The browser which will retrieve the mouse movement """,
                    "posX": """Absolute X screen coordinate """,
                    "posY": """Absolute Y screen coordinate """
                },
                result='returns true if the movement was injected successfully, false otherwise.' ,
            ),
            url='injectBrowserMouseMove',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="injectBrowserMouseUp",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='injectMouseUp',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='mouseButton',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function injects a mouse click (state: up).' ,
                arguments={
                    "webBrowser": """The web browser """,
                    "mouseButton": """The mouse button (Possible values: left, middle, right) """
                },
                result='returns true if the click was successfully injected, false otherwise.' ,
            ),
            url='injectBrowserMouseUp',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="injectBrowserMouseWheel",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='injectMouseWheel',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='verticalScroll',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='horizontalScroll',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function injects mouse wheel events.' ,
                arguments={
                    "webBrowser": """The web browser """,
                    "verticalScroll": """: Amount of units you want the browser to scroll along the Y-axe. """,
                    "horizontalScroll": """: Amount of units you want the browser to scroll along the X-axe. """
                },
                result='returns true if the mouse action was successfully injected, false otherwise.' ,
            ),
            url='injectBrowserMouseWheel',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description="""This is a static function under the '''Browser''' class""",
                base_function_name="isBrowserDomainBlocked",
                class_name='Element/Browser|Browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='isDomainBlocked',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='address',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='isURL',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='false',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function checks if the specified URL is blocked from being loaded.' ,
                arguments={
                    "address": """A website URL """,
                    "isURL": """true if address should be parsed as URL, false otherwise. """
                },
                result='returns false if the url is able to be loaded, true if it is blocked and nil if an invalid domain/url was passed.' ,
            ),
            url='isBrowserDomainBlocked',
        ),
                field=None,
                is_static=True,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="isBrowserFocused",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='isFocused',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function checks if a browser is focused.' ,
                arguments={
                    "webBrowser": """The browser """
                },
                result='returns true if the browser is focused, false otherwise and nil if invalid arguments were passed.' ,
            ),
            url='isBrowserFocused',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="isBrowserLoading",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='isLoading',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function checks if a browser is currently loading a website.' ,
                arguments={
                    "webBrowser": """The browser """
                },
                result='returns true if the browser is loading a website, false otherwise and nil if invalid arguments were passed.' ,
            ),
            url='isBrowserLoading',
        ),
                field=FunctionOOPField(
                                name='loading',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="loadBrowserURL",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='loadURL',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='url',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='postData',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=True,
                                ),
                                default_value='""',
                            )
                        ],
                        [
                            FunctionArgument(
                                name='urlEncoded',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='true',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function loads the specified URL.' ,
                arguments={
                    "webBrowser": """The Element/Browser|browser element which will load the URL """,
                    "url": """The url you want to load. It can either contain a remote website (http:// prefix) or a website stored within a local resource (http://mta/local/gui.html for example, see Local_Scheme_Handler|Local Scheme Handler for details). """,
                    "postData": """The post data passed to the website. Its content type can be any type (e.g. JSON) if urlEncoded is set to false """,
                    "urlEncoded": """If set to true, it will be available f.e. in PHPs $_POST variable (the content type is: application/x-www-form-urlencoded) """
                },
                result='returns true if the url was successfully loaded.' ,
            ),
            url='loadBrowserURL',
        ),
                field=FunctionOOPField(
                                name='url',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="requestBrowserDomains",
                class_name='Element/Browser|Browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='requestDomains',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='pages',
                                argument_type=FunctionType(
                                    names=['table'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='parseAsURL',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='false',
                            )
                        ],
                        [
                            FunctionArgument(
                                name='callback',
                                argument_type=FunctionType(
                                    names=['function'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function opens a request window in order to accept the requested remote URLs.' ,
                arguments={
                    "pages": """A table containing all domains """,
                    "parseAsURL": """true if the passed addresses should be converted from URLs, false otherwise. """,
                    "callback": """A callback function that is called as soon as the result is available
Syntax:
<syntaxhighlight lang="lua">function(bool wasAccepted, table new_domains)</syntaxhighlight> """
                },
                result='returns true, if the string was successfully read, false otherwise.' ,
            ),
            url='requestBrowserDomains',
        ),
                field=None,
                is_static=True,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBrowserAjaxHandler",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='setAjaxHandler',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='url',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='handler',
                                argument_type=FunctionType(
                                    names=['function'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function provides a requestable ajax resource for Lua/Javascript communication for a Element/Browser|browser.' ,
                arguments={
                    "webBrowser": """The web browser which will execute the Javascript code """,
                    "url": """The URL endpoint to handle """,
                    "handler": """The function to call if the webBrowser attempts to open the ajax endpoint. If this parameter is nil or omitted, the ajax handler for the url will be deleted. """
                },
                result='' ,
            ),
            url='setBrowserAjaxHandler',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBrowserProperty",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='setProperty',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='key',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='value',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets a given property of a specified browser.' ,
                arguments={
                    "theBrowser": """The browser element you want to set a property of """,
                    "key": """The browser property key. It can be: """,
                    "mobile": """Surfing the web as mobile """,
                    "value": """A value indicating whether to enable (1) the property or not (0) """
                },
                result='returns true if the property was successfully set, false otherwise.' ,
            ),
            url='setBrowserProperty',
        ),
                field=None,
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBrowserRenderingPaused",
                class_name='browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='setRenderingPaused',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='paused',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets the rendering state of a browser.' ,
                arguments={
                    "webBrowser": """The browser """,
                    "paused": """true to pause rendering, false to continue """
                },
                result='returns true if the state was successfully changed' ,
            ),
            url='setBrowserRenderingPaused',
        ),
                field=FunctionOOPField(
                                name='renderingPaused',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="setBrowserVolume",
                class_name='Element/Browser|browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='setVolume',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='volume',
                                argument_type=FunctionType(
                                    names=['float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function sets either a specific Element/Browser|browsers volume, or the overall volume for browsers.' ,
                arguments={
                    "volume": """A float|floating point number representing the desired volume level. Range is from 0.0 to 1.0 """,
                    "webBrowser": """A browser element """
                },
                result='' ,
            ),
            url='setBrowserVolume',
        ),
                field=FunctionOOPField(
                                name='volume',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    ),
    CompoundOOPData(
        server=[
            
        ],
        client=[
            FunctionOOP(
                description=None,
                base_function_name="toggleBrowserDevTools",
                class_name='browser',
                method=FunctionData(
            signature=FunctionSignature(
                name='toggleDevTools',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='webBrowser',
                                argument_type=FunctionType(
                                    names=['browser'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='visible',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
                generic_types=[
                    
                ],
            ),
            docs=FunctionDoc(
                description='This function toggles the visibility of the developer tools pane.' ,
                arguments={
                    "webBrowser": """The browser """,
                    "visible": """true to show the tools, false to hide """
                },
                result='returns true if the visibility was successfully toggled, false if an error occurred' ,
            ),
            url='toggleBrowserDevTools',
        ),
                field=FunctionOOPField(
                                name='devTools',
                                types=[
                                    FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                                ],
                            ),
                is_static=False,
            )
        ],
    )
]
