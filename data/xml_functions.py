# Autogenerated file. ANY CHANGES WILL BE OVERWRITTEN
from to_python.core.types import FunctionType, \
    FunctionArgument, \
    FunctionArgumentValues, \
    FunctionReturnTypes, \
    FunctionSignature, \
    FunctionDoc, \
    FunctionOOP, \
    FunctionData, \
    CompoundFunctionData
    
DUMP_PARTIAL = [
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlCopyFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='nodeToCopy',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='newFilePath',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function copies all contents of a certain node in a XML document to a new document file, so the copied node becomes the new files root node.
The new file will not be saved to file system until xmlSaveFile() is called """,
                arguments={
                    "nodeToCopy": """the xmlnode that is to be copied to a new document. """,
                    "newFilePath": """the path of the file that is to be created, in the following format: :resourceName/path. resourceName is the name of the resource the file is in, and path is the path from the root directory of the resource to the file.
:For example, to create a file named 'newfile.xml' with myNode as the root node in the resource 'ctf', it can be done from another resource this way: ''xmlCopyFile(myNode, ":ctf/newfile.xml")''.
:If the file is to be in the current resource, only the file path is necessary, e.g. ''xmlCopyFile(myNode, "newfile.xml")''. """
                },
                result="""returns the xmlnode of the copy if the node was successfully copied, false if invalid arguments were passed. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='copy',
                field='None',
                is_static=False,
            ),
            name='xmlCopyFile',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlCopyFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='nodeToCopy',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='newFilePath',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function copies all contents of a certain node in a XML document to a new document file, so the copied node becomes the new files root node.
The new file will not be saved to file system until xmlSaveFile() is called """,
                arguments={
                    "nodeToCopy": """the xmlnode that is to be copied to a new document. """,
                    "newFilePath": """the path of the file that is to be created, in the following format: :resourceName/path. resourceName is the name of the resource the file is in, and path is the path from the root directory of the resource to the file.
:For example, to create a file named 'newfile.xml' with myNode as the root node in the resource 'ctf', it can be done from another resource this way: ''xmlCopyFile(myNode, ":ctf/newfile.xml")''.
:If the file is to be in the current resource, only the file path is necessary, e.g. ''xmlCopyFile(myNode, "newfile.xml")''. """
                },
                result="""returns the xmlnode of the copy if the node was successfully copied, false if invalid arguments were passed. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='copy',
                field='None',
                is_static=False,
            ),
            name='xmlCopyFile',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlCreateChild',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='parentNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='tagName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function creates a new child node under an XML node. """,
                arguments={
                    "parentNode": """the xmlnode you want to create a new child node under. """,
                    "tagName": """the type of the child node that will be created. """
                },
                result="""returns the created xmlnode if successful, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='createChild',
                field='None',
                is_static=False,
            ),
            name='xmlCreateChild',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlCreateChild',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='parentNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='tagName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function creates a new child node under an XML node. """,
                arguments={
                    "parentNode": """the xmlnode you want to create a new child node under. """,
                    "tagName": """the type of the child node that will be created. """
                },
                result="""returns the created xmlnode if successful, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='createChild',
                field='None',
                is_static=False,
            ),
            name='xmlCreateChild',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlCreateFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='filePath',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='rootNodeName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function creates a new XML document, which can later be saved to a file by using xmlSaveFile. This function will overwrite the file specified if it already exists. """,
                arguments={
                    "filePath": """The filepath of the file in the following format: :resourceName/path. resourceName is the name of the resource the file will be in, and path is the path from the root directory of the resource to the file.
:For example, if you want to create a file named 'new.xml' in the resource 'ctf', it can be created from another resource this way: ''xmlCreateFile(":ctf/new.xml", "newroot")''.
:If the file is in the current resource, only the file path is necessary, e.g. ''xmlCreateFile("new.xml", "newroot")''.
:Note that if a different resource than default is being accessed, the caller resource needs access to general.ModifyOtherObjects in the [[ACL]]. """,
                    "rootNodeName": """the name of the root node in the XML document. """
                },
                result="""returns the root xmlnode object of the new xml file if successful, or false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='Xml|XML',
                method_name='None',
                field='None',
                is_static=True,
            ),
            name='xmlCreateFile',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlCreateFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='filePath',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='rootNodeName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function creates a new XML document, which can later be saved to a file by using xmlSaveFile. This function will overwrite the file specified if it already exists. """,
                arguments={
                    "filePath": """The filepath of the file in the following format: :resourceName/path. resourceName is the name of the resource the file will be in, and path is the path from the root directory of the resource to the file.
:For example, if you want to create a file named 'new.xml' in the resource 'ctf', it can be created from another resource this way: ''xmlCreateFile(":ctf/new.xml", "newroot")''.
:If the file is in the current resource, only the file path is necessary, e.g. ''xmlCreateFile("new.xml", "newroot")''.
:Note that if a different resource than default is being accessed, the caller resource needs access to general.ModifyOtherObjects in the [[ACL]]. """,
                    "rootNodeName": """the name of the root node in the XML document. """
                },
                result="""returns the root xmlnode object of the new xml file if successful, or false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='Xml|XML',
                method_name='None',
                field='None',
                is_static=True,
            ),
            name='xmlCreateFile',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlDestroyNode',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theXMLNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function destroys a XML node from the XML node tree. """,
                arguments={
                    "theXMLNode": """The xml node you want to destroy. """
                },
                result="""returns true if the xml node was successfully destroyed, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='destroy',
                field='None',
                is_static=False,
            ),
            name='xmlDestroyNode',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlDestroyNode',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theXMLNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function destroys a XML node from the XML node tree. """,
                arguments={
                    "theXMLNode": """The xml node you want to destroy. """
                },
                result="""returns true if the xml node was successfully destroyed, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='destroy',
                field='None',
                is_static=False,
            ),
            name='xmlDestroyNode',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlFindChild',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='parent',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='tagName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='index',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function returns a named child node of an XML node. """,
                arguments={
                    "parent": """: This is an xmlnode that you want to find the child node under. """,
                    "tagName": """: This is the name of the child node you wish to find (case-sensitive). """,
                    "index": """: This is the 0-based index of the node you wish to find. For example, to find the 5th subnode with a particular name, you would use 4 as the index value. To find the first occurence, use 0. """
                },
                result="""returns an xmlnode if the node was found, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='findChild',
                field='None',
                is_static=False,
            ),
            name='xmlFindChild',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlFindChild',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='parent',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='tagName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='index',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function returns a named child node of an XML node. """,
                arguments={
                    "parent": """: This is an xmlnode that you want to find the child node under. """,
                    "tagName": """: This is the name of the child node you wish to find (case-sensitive). """,
                    "index": """: This is the 0-based index of the node you wish to find. For example, to find the 5th subnode with a particular name, you would use 4 as the index value. To find the first occurence, use 0. """
                },
                result="""returns an xmlnode if the node was found, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='findChild',
                field='None',
                is_static=False,
            ),
            name='xmlFindChild',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlLoadFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='filePath',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='readOnly',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='false',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function provides an alternative way to load XML files to getResourceConfig.
This function loads an XML file and returns the node by specifying a specific file path, while getResourceConfig allows for loading an XML file from a resource. """,
                arguments={
                    "filePath": """The filepath of the file in the following format: :resourceName/path. resourceName is the name of the resource the file is in, and path is the path from the root directory of the resource to the file.
:For example, if there is a file named 'settings.xml' in the resource 'ctf', it can be accessed from another resource this way: ''xmlLoadFile(":ctf/settings.xml")''.
:If the file is in the current resource, only the file path is necessary, e.g. ''xmlLoadFile("settings.xml")''. """,
                    "readOnly": """By default, the XML file is opened with reading and writing access. You can specify true for this parameter if you only need reading access. """
                },
                result="""returns the root xmlnode object of an xml file if successful, or false otherwise.
print error if something wrong with xml.
|7485}} """,
            ),
            oop=FunctionOOP(
                description="""This function is a static function underneath the XML class. """,
                class_name='XML',
                method_name='load',
                field='None',
                is_static=True,
            ),
            name='xmlLoadFile',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlLoadFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='filePath',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='readOnly',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='false',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function provides an alternative way to load XML files to getResourceConfig.
This function loads an XML file and returns the node by specifying a specific file path, while getResourceConfig allows for loading an XML file from a resource. """,
                arguments={
                    "filePath": """The filepath of the file in the following format: :resourceName/path. resourceName is the name of the resource the file is in, and path is the path from the root directory of the resource to the file.
:For example, if there is a file named 'settings.xml' in the resource 'ctf', it can be accessed from another resource this way: ''xmlLoadFile(":ctf/settings.xml")''.
:If the file is in the current resource, only the file path is necessary, e.g. ''xmlLoadFile("settings.xml")''. """,
                    "readOnly": """By default, the XML file is opened with reading and writing access. You can specify true for this parameter if you only need reading access. """
                },
                result="""returns the root xmlnode object of an xml file if successful, or false otherwise.
print error if something wrong with xml.
|7485}} """,
            ),
            oop=FunctionOOP(
                description="""This function is a static function underneath the XML class. """,
                class_name='XML',
                method_name='load',
                field='None',
                is_static=True,
            ),
            name='xmlLoadFile',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlLoadString',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='xmlString',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description=""" """,
                arguments={
                    "xmlString": """A string containing XML data """
                },
                result="""returns the root xmlnode object of an xml string if successful, or false otherwise (invalid xml string). """,
            ),
            oop=FunctionOOP(
                description="""This function is a static function underneath the XML class. """,
                class_name='XML',
                method_name='loadstring',
                field='None',
                is_static=True,
            ),
            name='xmlLoadString',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlLoadString',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='xmlString',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description=""" """,
                arguments={
                    "xmlString": """A string containing XML data """
                },
                result="""returns the root xmlnode object of an xml string if successful, or false otherwise (invalid xml string). """,
            ),
            oop=FunctionOOP(
                description="""This function is a static function underneath the XML class. """,
                class_name='XML',
                method_name='loadstring',
                field='None',
                is_static=True,
            ),
            name='xmlLoadString',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetAttribute',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='name',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is used to return an attribute of a node in a configuration file. """,
                arguments={
                    "node": """The node from which you wish to return the attribute """,
                    "name": """The name of the attribute. """
                },
                result="""returns the attribute in string form or false, if the attribute is not defined. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getAttribute',
                field='None',
                is_static=False,
            ),
            name='xmlNodeGetAttribute',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetAttribute',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='name',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is used to return an attribute of a node in a configuration file. """,
                arguments={
                    "node": """The node from which you wish to return the attribute """,
                    "name": """The name of the attribute. """
                },
                result="""returns the attribute in string form or false, if the attribute is not defined. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getAttribute',
                field='None',
                is_static=False,
            ),
            name='xmlNodeGetAttribute',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetAttributes',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Returns all the attributes of a specific XML node. """,
                arguments={
                    "node": """the XML node to get the attributes of. """
                },
                result="""if successful, returns a table with as keys the names of the attributes and as values the corresponding attribute values. if the node has no attributes, returns an empty table. in case of failure, returns false. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getAttributes',
                field='attributes',
                is_static=False,
            ),
            name='xmlNodeGetAttributes',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetAttributes',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Returns all the attributes of a specific XML node. """,
                arguments={
                    "node": """the XML node to get the attributes of. """
                },
                result="""if successful, returns a table with as keys the names of the attributes and as values the corresponding attribute values. if the node has no attributes, returns an empty table. in case of failure, returns false. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getAttributes',
                field='attributes',
                is_static=False,
            ),
            name='xmlNodeGetAttributes',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetChildren',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table', 'xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='parent',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='index',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function returns all children of a particular XML node, or a particular child node. """,
                arguments={
                    "parent": """This is the xmlnode you want to retrieve one or all child nodes of. """,
                    "index": """If you only want to retrieve one particular child node, specify its (0-based) index here. For example if you only want the first node, specify 0; the fifth node has index 4, etc. """
                },
                result="""if index isnt specified, returns a table containing all child nodes. if index is specified, returns the corresponding child node if it exists. if no nodes are found, it returns an empty table. returns false in case of failure. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getChildren',
                field='children',
                is_static=False,
            ),
            name='xmlNodeGetChildren',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetChildren',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table', 'xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='parent',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='index',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function returns all children of a particular XML node, or a particular child node. """,
                arguments={
                    "parent": """This is the xmlnode you want to retrieve one or all child nodes of. """,
                    "index": """If you only want to retrieve one particular child node, specify its (0-based) index here. For example if you only want the first node, specify 0; the fifth node has index 4, etc. """
                },
                result="""if index isnt specified, returns a table containing all child nodes. if index is specified, returns the corresponding child node if it exists. if no nodes are found, it returns an empty table. returns false in case of failure. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getChildren',
                field='children',
                is_static=False,
            ),
            name='xmlNodeGetChildren',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Gets the tag name of the specified XML node. """,
                arguments={
                    "node": """the node to get the tag name of. """
                },
                result="""returns the tag name of the node if successful, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getName',
                field='name',
                is_static=False,
            ),
            name='xmlNodeGetName',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Gets the tag name of the specified XML node. """,
                arguments={
                    "node": """the node to get the tag name of. """
                },
                result="""returns the tag name of the node if successful, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getName',
                field='name',
                is_static=False,
            ),
            name='xmlNodeGetName',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetParent',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Returns the parent node of an xml node. """,
                arguments={
                    "node": """the node of which you want to know the parent. """
                },
                result="""returns the parent node of the specified node if successful. returns false if the specified node is the root node or an invalid node was passed. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getParent',
                field='parent',
                is_static=False,
            ),
            name='xmlNodeGetParent',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetParent',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Returns the parent node of an xml node. """,
                arguments={
                    "node": """the node of which you want to know the parent. """
                },
                result="""returns the parent node of the specified node if successful. returns false if the specified node is the root node or an invalid node was passed. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getParent',
                field='parent',
                is_static=False,
            ),
            name='xmlNodeGetParent',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetValue',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theXMLNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is made to be able to read tag values in XML files (eg. <something>anything</something>). """,
                arguments={
                    "theXMLNode": """The xml node of which you need to know the value. """
                },
                result="""returns the value of the node as a string if it was received successfully, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getValue',
                field='value',
                is_static=False,
            ),
            name='xmlNodeGetValue',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeGetValue',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theXMLNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is made to be able to read tag values in XML files (eg. <something>anything</something>). """,
                arguments={
                    "theXMLNode": """The xml node of which you need to know the value. """
                },
                result="""returns the value of the node as a string if it was received successfully, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='getValue',
                field='value',
                is_static=False,
            ),
            name='xmlNodeGetValue',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeSetAttribute',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='name',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='value',
                                argument_type=FunctionType(
                                    names=['string', 'float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is used to edit an attribute of a node in a configuration file. """,
                arguments={
                    "node": """The node of which you wish to edit an attribute. """,
                    "name": """The name of the attribute. """,
                    "value": """The value which you wish to change the attribute to. (Note: nil will delete the attribute) """
                },
                result="""returns true if the attribute was set successfully, false if the node and/or attribute do not exist, or if theyre faulty. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='setAttribute',
                field='None',
                is_static=False,
            ),
            name='xmlNodeSetAttribute',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeSetAttribute',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='name',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='value',
                                argument_type=FunctionType(
                                    names=['string', 'float'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is used to edit an attribute of a node in a configuration file. """,
                arguments={
                    "node": """The node of which you wish to edit an attribute. """,
                    "name": """The name of the attribute. """,
                    "value": """The value which you wish to change the attribute to. (Note: nil will delete the attribute) """
                },
                result="""returns true if the attribute was set successfully, false if the node and/or attribute do not exist, or if theyre faulty. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='setAttribute',
                field='None',
                is_static=False,
            ),
            name='xmlNodeSetAttribute',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeSetName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='name',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Sets the tag name of the specified XML node. """,
                arguments={
                    "node": """the node to change the tag name of. """,
                    "name": """the new tag name to set. """
                },
                result="""returns true if successful, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='setName',
                field='name',
                is_static=False,
            ),
            name='xmlNodeSetName',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeSetName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='name',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Sets the tag name of the specified XML node. """,
                arguments={
                    "node": """the node to change the tag name of. """,
                    "name": """the new tag name to set. """
                },
                result="""returns true if successful, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='setName',
                field='name',
                is_static=False,
            ),
            name='xmlNodeSetName',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeSetValue',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theXMLNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='value',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='setCDATA',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='false',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is made to be able to assign values to tags in XML files (eg. <something>anything</something>). """,
                arguments={
                    "theXMLNode": """The xml node you want to set the value of. """,
                    "value": """The string value you want the node to have. """,
                    "setCDATA": """A boolean indicating if you want the value to be enclosed inside CDATA tags. """
                },
                result="""returns true if value was successfully set, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='setValue',
                field='value',
                is_static=False,
            ),
            name='xmlNodeSetValue',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlNodeSetValue',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theXMLNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='value',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='setCDATA',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=True,
                                ),
                                default_value='false',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is made to be able to assign values to tags in XML files (eg. <something>anything</something>). """,
                arguments={
                    "theXMLNode": """The xml node you want to set the value of. """,
                    "value": """The string value you want the node to have. """,
                    "setCDATA": """A boolean indicating if you want the value to be enclosed inside CDATA tags. """
                },
                result="""returns true if value was successfully set, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='setValue',
                field='value',
                is_static=False,
            ),
            name='xmlNodeSetValue',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlSaveFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='rootNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function saves a loaded XML file. """,
                arguments={
                    "rootNode": """the root xmlnode of the loaded XML file. """
                },
                result="""returns true if save was successful, false if the xml file does not exist. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='saveFile',
                field='None',
                is_static=False,
            ),
            name='xmlSaveFile',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlSaveFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='rootNode',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function saves a loaded XML file. """,
                arguments={
                    "rootNode": """the root xmlnode of the loaded XML file. """
                },
                result="""returns true if save was successful, false if the xml file does not exist. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='saveFile',
                field='None',
                is_static=False,
            ),
            name='xmlSaveFile',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='xmlUnloadFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Unloads an XML document from memory. """,
                arguments={
                    "node": """root of the XML document to unload """
                },
                result="""returns true if the document was unloaded successfully, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='unload',
                field='None',
                is_static=False,
            ),
            name='xmlUnloadFile',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='xmlUnloadFile',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='node',
                                argument_type=FunctionType(
                                    names=['xmlnode'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""Unloads an XML document from memory. """,
                arguments={
                    "node": """root of the XML document to unload """
                },
                result="""returns true if the document was unloaded successfully, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='xmlnode',
                method_name='unload',
                field='None',
                is_static=False,
            ),
            name='xmlUnloadFile',
        ),
    )
]
