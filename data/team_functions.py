# Autogenerated file. ANY CHANGES WILL BE OVERWRITTEN
from to_python.core.types import FunctionType, \
    FunctionArgument, \
    FunctionArgumentValues, \
    FunctionReturnTypes, \
    FunctionSignature, \
    FunctionDoc, \
    FunctionOOP, \
    FunctionData, \
    CompoundFunctionData
    
DUMP_PARTIAL = [
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='countPlayersInTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is for returning the number of players in the specified team. """,
                arguments={
                    "theTeam": """The team you wish to retrieve the player count of. """
                },
                result="""returns an integer containing the number of players in the team, false if it could not be retrieved. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='countPlayers',
                field='playerCount',
                is_static=False,
            ),
            name='countPlayersInTeam',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='countPlayersInTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is for returning the number of players in the specified team. """,
                arguments={
                    "theTeam": """The team you wish to retrieve the player count of. """
                },
                result="""returns an integer containing the number of players in the team, false if it could not be retrieved. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='countPlayers',
                field='playerCount',
                is_static=False,
            ),
            name='countPlayersInTeam',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='createTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='teamName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='colorR',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='255',
                            )
                        ],
                        [
                            FunctionArgument(
                                name='colorG',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='255',
                            )
                        ],
                        [
                            FunctionArgument(
                                name='colorB',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=True,
                                ),
                                default_value='255',
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is for creating a new team, which can be used to group players. Players will not join the team until they are respawned. """,
                arguments={
                    "teamName": """A string representing the teams name. """,
                    "colorR": """An integer representing the red color value. """,
                    "colorG": """An integer representing the green color value. """,
                    "colorB": """An integer representing the blue color value. """
                },
                result="""returns a team element if it was successfully created, false if invalid arguments are passed or a team with that name already exists. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='Team',
                method_name='create',
                field='None',
                is_static=True,
            ),
            name='createTeam',
        ),
        client=None,
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='getPlayersInTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function retrieves all the players of the specified team. """,
                arguments={
                    "theTeam": """The team you wish to retrieve all the players from. """
                },
                result="""returns a table of all the players in the team, or an empty one if there are none else false if invalid arguments are passed. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getPlayers',
                field='players',
                is_static=False,
            ),
            name='getPlayersInTeam',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='getPlayersInTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['table'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function retrieves all the players of the specified team. """,
                arguments={
                    "theTeam": """The team you wish to retrieve all the players from. """
                },
                result="""returns a table of all the players in the team, or an empty one if there are none else false if invalid arguments are passed. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getPlayers',
                field='players',
                is_static=False,
            ),
            name='getPlayersInTeam',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='getPlayerTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePlayer',
                                argument_type=FunctionType(
                                    names=['player'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function gets the current team a player is on. """,
                arguments={
                    "thePlayer": """: The player whose team you want to find out. """
                },
                result="""returns a team element representing the team the player is on, false if the player is not part of a team. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='player',
                method_name='getTeam',
                field='team',
                is_static=False,
            ),
            name='getPlayerTeam',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='getPlayerTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePlayer',
                                argument_type=FunctionType(
                                    names=['player'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function gets the current team a player is on. """,
                arguments={
                    "thePlayer": """: The player whose team you want to find out. """
                },
                result="""returns a team element representing the team the player is on, false if the player is not part of a team. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='player',
                method_name='getTeam',
                field='team',
                is_static=False,
            ),
            name='getPlayerTeam',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='getTeamColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function retrieves the color of a team. """,
                arguments={
                    "theTeam": """The team you want to get the color of. """
                },
                result="""returns 3 integers representing the red, green, and blue color components of the team if its valid, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getColor',
                field='None',
                is_static=False,
            ),
            name='getTeamColor',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='getTeamColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                    FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function retrieves the color of a team. """,
                arguments={
                    "theTeam": """The team you want to get the color of. """
                },
                result="""returns 3 integers representing the red, green, and blue color components of the team if its valid, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getColor',
                field='None',
                is_static=False,
            ),
            name='getTeamColor',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='getTeamFriendlyFire',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function tells you if friendly fire is turned on for the specified team. """,
                arguments={
                    "theTeam": """The team object that will be checked """
                },
                result="""returns true if friendly fire is on for the specified team, false if it is turned off or if invalid arguments are specified. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getFriendlyFire',
                field='friendlyFire',
                is_static=False,
            ),
            name='getTeamFriendlyFire',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='getTeamFriendlyFire',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function tells you if friendly fire is turned on for the specified team. """,
                arguments={
                    "theTeam": """The team object that will be checked """
                },
                result="""returns true if friendly fire is on for the specified team, false if it is turned off or if invalid arguments are specified. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getFriendlyFire',
                field='friendlyFire',
                is_static=False,
            ),
            name='getTeamFriendlyFire',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='getTeamFromName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='teamName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function finds a team element using the provided team name. """,
                arguments={
                    "teamName": """A string determining the name of the team you wish to find. """
                },
                result="""returns the team element if it was found, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='Team',
                method_name='getFromName',
                field='None',
                is_static=True,
            ),
            name='getTeamFromName',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='getTeamFromName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='teamName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function finds a team element using the provided team name. """,
                arguments={
                    "teamName": """A string determining the name of the team you wish to find. """
                },
                result="""returns the team element if it was found, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='Team',
                method_name='getFromName',
                field='None',
                is_static=True,
            ),
            name='getTeamFromName',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='getTeamName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function gets the team name of a team object. """,
                arguments={
                    "theTeam": """The team you want to retrieve the name of. """
                },
                result="""returns a string representing the teams name if the team object was valid, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getName',
                field='name',
                is_static=False,
            ),
            name='getTeamName',
        ),
        client=FunctionData(
            signature=FunctionSignature(
                name='getTeamName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function gets the team name of a team object. """,
                arguments={
                    "theTeam": """The team you want to retrieve the name of. """
                },
                result="""returns a string representing the teams name if the team object was valid, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='getName',
                field='name',
                is_static=False,
            ),
            name='getTeamName',
        ),
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='setPlayerTeam',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='thePlayer',
                                argument_type=FunctionType(
                                    names=['player'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function adds a player to an existing team. The player will automatically be removed from his current team if hes on one. """,
                arguments={
                    "thePlayer": """The player you wish to add to a team. """,
                    "theTeam": """The team you want to add the player to, or nil if you wish to unassign a player from his team. """
                },
                result="""returns true if the player was successfully added to the specified team or removed from his previous one, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='player',
                method_name='setTeam',
                field='team',
                is_static=False,
            ),
            name='setPlayerTeam',
        ),
        client=None,
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='setTeamColor',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='colorR',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='colorG',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='colorB',
                                argument_type=FunctionType(
                                    names=['int'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is for setting the color of a specified team. This color is shown, for example, in the team players nametags. """,
                arguments={
                    "theTeam": """The team you want to change the color of. """,
                    "colorR": """An integer representing the red color value, from 0 to 255. """,
                    "colorG": """An integer representing the green color value, from 0 to 255. """,
                    "colorB": """An integer representing the blue color value, from 0 to 255. """
                },
                result="""returns true if the team is valid and the color is different, otherwise false. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='setColor',
                field='None',
                is_static=False,
            ),
            name='setTeamColor',
        ),
        client=None,
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='setTeamFriendlyFire',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='friendlyFire',
                                argument_type=FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function sets the friendly fire value for the specified team. """,
                arguments={
                    "theTeam": """The  team that will have friendly fire set """,
                    "friendlyFire": """A boolean denoting whether the players from the same team can kill each other (true) or whether the players cant kill each other (false). """
                },
                result="""returns true if the friendly fire value is set for the specified team, false if the friendly fire value cant be set for the specified team or if invalid arguments are specified. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='setFriendlyFire',
                field='friendlyFire',
                is_static=False,
            ),
            name='setTeamFriendlyFire',
        ),
        client=None,
    ),
    CompoundFunctionData(
        server=FunctionData(
            signature=FunctionSignature(
                name='setTeamName',
                return_types=FunctionReturnTypes(
                    return_types=[
                        FunctionType(
                                    names=['bool'],
                                    is_optional=False,
                                )
                    ],
                    variable_length=False,
                ),
                arguments=FunctionArgumentValues(
                    arguments=[
                        [
                            FunctionArgument(
                                name='theTeam',
                                argument_type=FunctionType(
                                    names=['team'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ],
                        [
                            FunctionArgument(
                                name='newName',
                                argument_type=FunctionType(
                                    names=['string'],
                                    is_optional=False,
                                ),
                                default_value=None,
                            )
                        ]
                    ],
                    variable_length=False,
                ),
            ),
            docs=FunctionDoc(
                description="""This function is used to set a teams name. """,
                arguments={
                    "theTeam": """The team you want to change the name of. """,
                    "newName": """A string representing the name you want the team to be called. """
                },
                result="""returns true if the team was valid and the name was changed, false otherwise. """,
            ),
            oop=FunctionOOP(
                description="""None """,
                class_name='team',
                method_name='setName',
                field='name',
                is_static=False,
            ),
            name='setTeamName',
        ),
        client=None,
    )
]
